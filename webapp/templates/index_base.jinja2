<!doctype html>
<head>
    <title>Are they still on Twitter?</title>
    <link href="css/semantic.min.css" rel="stylesheet">
    <script src="js/jquery-3.4.1.min.js"></script>
    <script src="js/semantic.min.js"></script>
        <script src="js/js-confetti.browser.js"></script>

</head>

<body>

<div class="ui container" style="overflow-x: scroll">

    <br>
    <br>

    {% if lookup_results['error_messages'] is defined and lookup_results['error_messages'] is not none or lookup_results['error_messages'] != "" %}
        {% for error_message in lookup_results["error_messages"] %}
        <div class="ui negative message">
            <i class="close icon"></i>
            <div class="header">
                {{ error_message }}
            </div>
        </div>
        {%  endfor %}
    {% else %}
    {% endif %}

    <h1 class="ui header">Are they still on Twitter?</h1>
    <h2 class="ui header red">VERY BETA</h2>


   <div class="content">
       Don't want to have to look at Nazi shit to see if someone is still on Twitter? Check <a href="#json_section"> here</a>!
    </div>

    <br>

    {% block content %}
    {% endblock %}

    <h4 class="ui horizontal divider header" id="json_section">
        JSON
    </h4>
    <div class="content">
        Results can also be fetched as JSON. Example:<br><br>

        <p style="font-family: monospace; font-weight: lighter" id="curl-example">
        </p>
    </div>

    <h4 class="ui horizontal divider header" id="json_section">
        Credit
    </h4>
    <div class="content">
        Confetti effect JS by <a href="https://github.com/loonywizard/js-confetti">https://github.com/loonywizard/js-confetti</a>
    </div>


<script>

    function auto_grow(element) {
    element.style.height = "5px";
    element.style.height = (element.scrollHeight)+"px";
}
    $('.ui.accordion').accordion();

    $(document).ready(function () {
        $("#curl-example").text("curl -H 'Content-Type: application/json' " + window.location.href)
        lookup_screennames = window.location.pathname.replace("/", "").split(",")
        $('#screennames_to_lookup').val(lookup_screennames.join(" "))

        var arr = window.location.search.substring(1);
        if (arr.length > 1 && arr[1] !== '') {
            $("#show_more_settings").click()
        }
    });

    $('#screennames_to_lookup').keypress(function (e) {
        var key = e.which;
        if (key == 13) {
            $('#lookup_screennames_button').click();
            return false;
        }
    });

    $("#lookup_screennames_button").click(function () {
        lookup_screennames = $("#screennames_to_lookup").val().trim().replace(/\s\s+/g, ' ').replace(/\t/g, ' ').split(" ")

        goto_url = window.location.protocol + "//" + window.location.host + "/" + lookup_screennames.join(",")

        params_dict = {}

        if (Object.keys(params_dict).length > 0) {
            goto_url = goto_url + "?" + $.param(params_dict)
        }

        window.location = goto_url
    });

</script>
</body>

